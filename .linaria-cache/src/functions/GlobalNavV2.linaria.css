.ngkzozc{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;}.ngkzozc .site-nav{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.ngkzozc .hamburger-icon{display:none;}@media (max-width:1023px){.ngkzozc .hamburger-icon{display:block;margin-left:calc(-1 * var(--spacing075));}}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mdW5jdGlvbnMvR2xvYmFsTmF2VjIuanMiXSwibmFtZXMiOlsiLm5na3pvemMiXSwibWFwcGluZ3MiOiJBQXNDVUEiLCJmaWxlIjoic3JjL2Z1bmN0aW9ucy9HbG9iYWxOYXZWMi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ2xpbmFyaWEnO1xuXG5cbmltcG9ydCB1c2VWaWV3cG9ydCBmcm9tICcuL3VzZVZpZXdQb3J0JztcbmltcG9ydCB1c2VDb3JyZWN0RWZmZWN0IGZyb20gJy4vdXNlQ29ycmVjdEVmZmVjdCc7XG5pbXBvcnQgUGFnZUNvbnRhaW5lciBmcm9tICcuL1BhZ2VDb250YWluZXInO1xuaW1wb3J0IHsgc2NyZWVuVGlueVRhYmxldCB9IGZyb20gJy4uL3Jlc3BvbnNpdmUvc2l6ZXMnO1xuaW1wb3J0IEdsb2JhbE5hdk1vYmlsZU1lbnUgZnJvbSAnLi9HbG9iYWxOYXZNb2JpbGVNZW51JztcbmltcG9ydCBMb2dvIGZyb20gJy4vTG9nbyc7XG5pbXBvcnQgTG9nb01hcmsgZnJvbSAnLi9Mb2dvTWFyayc7XG5pbXBvcnQgR2xvYmFsTmF2TGlua3MgZnJvbSAnLi9HbG9iYWxOYXZMaW5rcyc7XG5pbXBvcnQgR2xvYmFsTmF2VG9vbHMgZnJvbSAnLi9HbG9iYWxOYXZUb29scyc7XG5pbXBvcnQgR2xvYmFsTmF2QWNjb3VudCBmcm9tICcuL0dsb2JhbE5hdkFjY291bnQnO1xuaW1wb3J0IHsgYnJlYWtwb2ludExhcmdlVGFibGV0IH0gZnJvbSAnLi4vcmVzcG9uc2l2ZS9icmVha3BvaW50cyc7XG5cbmV4cG9ydCBjb25zdCBHbG9iYWxOYXZWMiA9ICh7XG4gICAgYXBwUm9vdFNlbGVjdG9yLFxuICAgIHBvY2tldExvZ29PdXRib3VuZFVybCxcbiAgICBzZWxlY3RlZExpbmssXG4gICAgaXNMb2dnZWRJbixcbiAgICBpc1ByZW1pdW0sXG4gICAgYXZhdGFyU3JjLFxuICAgIGFjY291bnROYW1lLFxuICAgIHByb2ZpbGVVcmwsXG4gICAgb25MaW5rQ2xpY2ssXG4gICAgb25Ub29sQ2xpY2ssXG4gICAgb25BY2NvdW50Q2xpY2ssXG4gICAgbGlua3MsXG4gICAgdG9vbHMsXG4gICAgY2hpbGRyZW5cbn0pID0+IHtcblxuICAgIGNvbnN0IGhlYWRlclN0eWxlID0gXCJoMWJoMnBycFwiO1xuICAgIGNvbnN0IHRvb2xzU3R5bGUgPSBcInR2YTVsc2JcIjtcbiAgICBjb25zdCBsaW5rc1N0eWxlID0gXCJsdmpxZGJhXCI7XG5cbiAgICBjb25zdCBuYXZTdHlsZSA9IGNzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgICAgIC5zaXRlLW5hdiB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgLmhhbWJ1cmdlci1pY29uIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAke2JyZWFrcG9pbnRMYXJnZVRhYmxldH0ge1xuICAgICAgICAgICAgLmhhbWJ1cmdlci1pY29uIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEgKiB2YXIoLS1zcGFjaW5nMDc1KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBgO1xuXG4gICAgY29uc3QgW2lzTW9iaWxlTWVudU9wZW4sIHNldElzTW9iaWxlTWVudU9wZW5dID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IHZpZXdwb3J0ID0gdXNlVmlld3BvcnQoKTtcbiAgICBjb25zdCB2aWV3cG9ydFdpZHRoID0gdmlld3BvcnQgPyB2aWV3cG9ydC53aWR0aCA6IHNjcmVlblRpbnlUYWJsZXQgKyAxO1xuXG4gICAgY29uc3QgY2hlY2tJc01vYmlsZSA9ICh2aWV3cG9ydFdpZHRoIDw9IHNjcmVlblRpbnlUYWJsZXQpO1xuXG4gICAgY29uc3QgW2lzTW9iaWxlLCBzZXRJc01vYmlsZV0gPSB1c2VTdGF0ZShjaGVja0lzTW9iaWxlKTtcblxuICAgIGNvbnN0IGhhbmRsZUxpbmtDbGljayA9IChsaW5rSWQsIGV2ZW50KSA9PiB7XG4gICAgICAgIHZhciBfZXZlbnQkY3VycmVudFRhcmdldDtcbiAgICBcbiAgICAgICAgaWYgKGlzTW9iaWxlKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBzZXRJc01vYmlsZU1lbnVPcGVuKHRydWUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICB2YXIgbGlua1VybCA9IGV2ZW50ID09PSBudWxsIHx8IGV2ZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2V2ZW50JGN1cnJlbnRUYXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0KSA9PT0gbnVsbCB8fCBfZXZlbnQkY3VycmVudFRhcmdldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2V2ZW50JGN1cnJlbnRUYXJnZXQuaHJlZjtcbiAgICAgICAgb25MaW5rQ2xpY2sobGlua0lkLCBsaW5rVXJsKTtcbiAgICB9XG5cbiAgICB1c2VDb3JyZWN0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2V0SXNNb2JpbGUodmlld3BvcnRXaWR0aCA8PSBzY3JlZW5UaW55VGFibGV0KTtcbiAgICB9LCBbdmlld3BvcnRXaWR0aF0pO1xuICAgIFxuICAgIHJldHVybiAoXG4gICAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPXsgY2xhc3NOYW1lcyhoZWFkZXJTdHlsZSwgeydsb2dnZWQtaW4nOiBpc0xvZ2dlZElufSkgfT5cbiAgICAgICAgICAgIDxQYWdlQ29udGFpbmVyIGNsYXNzTmFtZT1cImdsb2JhbC1uYXYtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPG5hdiBjbGFzc05hbWU9eyBuYXZTdHlsZSB9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNpdGUtbmF2XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8R2xvYmFsTmF2TW9iaWxlTWVudVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcFJvb3RTZWxlY3Rvcj17IGFwcFJvb3RTZWxlY3RvciB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlua3M9eyBsaW5rcyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25MaW5rQ2xpY2s9eyBvbkxpbmtDbGljayB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRMaW5rPXsgc2VsZWN0ZWRMaW5rIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVDbGFzcz1cImhhbWJ1cmdlci1pY29uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc09wZW49eyBpc01vYmlsZU1lbnVPcGVuIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVNZW51T3Blbj17IHNldElzTW9iaWxlTWVudU9wZW4gfVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9HbG9iYWxOYXZNb2JpbGVNZW51PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9XCJwb2NrZXQtbG9nby1uYXZcIiBjbGFzc05hbWU9XCJwb2NrZXQtbG9nb1wiIGhyZWY9e3BvY2tldExvZ29PdXRib3VuZFVybH0gb25DbGljaz17ICgpID0+IGhhbmRsZUxpbmtDbGljaygncG9ja2V0JykgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TG9nbyBjbGFzc05hbWU9XCJsb2dvXCI+PC9Mb2dvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgaXNMb2dnZWRJbiA/IDxMb2dvTWFyay8+IDogbnVsbCB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbiA/IGNoaWxkcmVuXG4gICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2xpbmtzU3R5bGV9IGFyaWEtbGFiZWw9XCJQYWdlIG5hdmlnYXRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEdsb2JhbE5hdkxpbmtzIHNlbGVjdGVkTGluaz17c2VsZWN0ZWRMaW5rfSBjbGFzc05hbWU9XCJsaW5rc1wiIGxpbmtzPXtsaW5rc30gb25MaW5rQ2xpY2s9e29uTGlua0NsaWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9HbG9iYWxOYXZMaW5rcz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXModG9vbHNTdHlsZSwgeydpcy1wcmVtaXVtJzogaXNQcmVtaXVtfSl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEdsb2JhbE5hdlRvb2xzIHRvb2xzPXt0b29sc30gb25Ub29sQ2xpY2s9e29uVG9vbENsaWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9HbG9iYWxOYXZUb29scz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEdsb2JhbE5hdkFjY291bnQgYXBwUm9vdFNlbGVjdG9yPXthcHBSb290U2VsZWN0b3J9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1ByZW1pdW09e2lzUHJlbWl1bX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzTG9nZ2VkSW49e2lzTG9nZ2VkSW59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmF0YXJTcmM9e2F2YXRhclNyY31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnROYW1lPXthY2NvdW50TmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGVVcmw9e3Byb2ZpbGVVcmx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkxpbmtDbGljaz17b25MaW5rQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkFjY291bnRDbGljaz17b25BY2NvdW50Q2xpY2t9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0dsb2JhbE5hdkFjY291bnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9uYXY+XG4gICAgICAgICAgICA8L1BhZ2VDb250YWluZXI+XG5cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBHbG9iYWxOYXZWMjsiXX0=*/